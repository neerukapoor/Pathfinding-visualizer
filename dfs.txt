#include <iostream>
#include <string.h>
#include <stack>
#include <vector>
using namespace std;

int ep,ex,ey,sx,sy,vis[11][11];
vector<int>p;

void display()
{
    int k=1;
    for(int i=0;i<10000;i++)
    {
        for(int j=0;j<1000;j++)
        {
            
        }
    }
    cout<<"\033[2J\033[5;0H";
    for(int i=0;i<10;i++)
    {
        for(int j=0;j<10;j++)
        {
            if(vis[i][j]==2)
                cout<<"-  ";
            else if(vis[i][j]==-1)
                cout<<"#  ";
            else if(i==ex && j==ey)
                cout<<"E  ";
            else if(i==sx && j==sy)
                cout<<"S  ";
            /*else if(i==x && j==y)
                cout<<"A  "; */
            else if(vis[i][j]==1)
                cout<<"*  ";
            else 
            {
                if(i==0)
                    cout<<k<<"  ";
                else
                    cout<<k<<" ";
            }
            k=k+1;
        }
        cout<<endl;
    }
}

int check (int x, int y)
{
    if (x >= 0 && x < 10 && y >= 0 && y < 10)
        return 1;
    return 0;
}


int dfs(int sx,int sy)
{
    //display(sx,sy);
    if(!check(sx,sy))
        return 0;
    if(sx == ex && sy == ey)
        return 1;
    if(vis[sx][sy]!=0)
        return 0;
    vis[sx][sy]=1;
    display();
    if(dfs(sx-1,sy))
    {
        int x;
        if(sy==9)
        {
            x=((sx-1+1)*10);
        }
        else
            x=((sx-1)*10)+(sy+1);
        p.push_back(x);
        return 1;
        p.pop_back();
    }
    if(dfs(sx,sy-1))
    {
        int x;
        if(sy-1==9)
        {
            x=((sx+1)*10);
        }
        else
            x=(sx*10)+(sy-1+1);
        p.push_back(x);
        return 1;
        p.pop_back();
    }
    if(dfs(sx+1,sy))
    {
        int x;
        if(sy==9)
        {
            x=(sx+1+1)*10;
        }
        else
            x=((sx+1)*10)+(sy+1);
        p.push_back(x);
        return 1;
        p.pop_back();
    }
    if(dfs(sx,sy+1))
    {
        int x;
        if(sy+1==9)
        {
            x=(sx+1)*10;
        }
        else
            x=(sx*10)+(sy+1+1);
        p.push_back(x);
        return 1;
        p.pop_back();
    }
    return 0;
}


int main ()
{
    int sp,x,y,wall,q,w;
    char ch;
    int k=1;
    for(int i=0;i<10;i++)
    {
        for(int j=0;j<10;j++)
	    {
	        if(i==0)
	        {
	            cout<<k<<"  ";
	        }
	        else
	            cout<<k<<" ";
	        k++;
	    }
        cout<<endl;
    }
    cout<<"Enter starting point and ending point ";
    cin>>sp>>ep;
    sx=sp/10;
    sy=(sp%10)-1;
    if (sy<0)
    {
        sy=9;
        sx=sx-1;
    }
    ex=ep/10;
    ey=(ep%10)-1;
    if(ey<0)
    {
        ey=9;
        ex=ex-1;
    }
    memset(vis,0,sizeof(vis));
    cout<<"Do you want to add walls? Press y/n ";
    cin>>ch;
    if(ch=='y' || ch=='Y')
    {
        cout<<"Enter walls number (to stop press 'enter') ";
        while(1)
        {
            cin>>wall;
            x=wall/10;
            y=(wall%10)-1;
            if(y<0)
            {
                y=9;
                x=x-1;
            }
            vis[x][y]=-1;
            if(cin.get()=='\n')
                break;
        }
    }
    if(dfs(sx,sy)==1)
    {
        for(int i=p.size()-1;i>0;i--)
        {
            q=p[i]/10;
            w=(p[i]%10)-1;
            if(w<0)
            {
                w=9;
                q=q-1;
            }
            vis[q][w]=2;
            display();
        }
        cout<<"Path is ";
        for(int i=p.size()-1;i>0;i--)
        {
            cout<<p[i]<<" ";
        }
    }
    else 
        cout<<"Not Found ";
    return 0;
}